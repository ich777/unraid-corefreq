<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
  <!ENTITY name      "CoreFreq">
  <!ENTITY author    "ich777">
  <!ENTITY version   "2022.04.01">
  <!ENTITY md5       "90110fd039115807030c841b125eedad">
  <!ENTITY launch    "Settings/corefreq">
  <!ENTITY gitURL    "https://raw.githubusercontent.com/&author;/unraid-corefreq/master">
  <!ENTITY pluginURL "&gitURL;/corefreq.plg">
  <!ENTITY plugin    "/boot/config/plugins/corefreq">
  <!ENTITY emhttp    "/usr/local/emhttp/plugins/CoreFreq">
]>

<PLUGIN  name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" min="6.9.2" support="https://forums.unraid.net/topic/109314-plugin-corefreq/">

<CHANGES>

###2022.04.01
- Bugfix, remove package on plugin removal

###2022.02.18
- Created plugin page
- Autostart from CoreFreq must be now enabled on plugin page

###2021.07.13
- Error showing up on boot in terminal fixed

###2021.06.16
- Search for latest CoreFreq version on boot and update it if a newer version is found

###2021.05.26
- Initial release

</CHANGES>

<FILE Run="/bin/bash">
<INLINE>
rm -f $(ls &plugin;/&name;*.txz 2>/dev/null|grep -v '&version;')
</INLINE>
</FILE>

<FILE Name="&plugin;/&name;-&version;.txz" Run="upgradepkg --install-new">
<URL>&gitURL;/packages/&name;-&version;.txz</URL>
<MD5>&md5;</MD5>
</FILE>

<FILE Name="&emhttp;/README.md">
<INLINE>
**CoreFreq**

CoreFreq is a CPU low level monitoring software designed for x86_64-Processors. You can show Package and Core temps, Hot sensor, Vcore, RAM,...  
You can also toggle SpeedStep, Clock modulation, Turbo boost, C-States demotion, C1E,...  
It has also a built in stress test and much, much more.  
Visit the plugin page after installing and follow the instructions.  
Open up a unRAID Terminal and type in 'corefreq-cli' (without quotes), hit "F2" or "SPACE" to open up the menu inside CoreFreq.  

Please note that not every combination of CPU and motherboard is supported!  
Intel Systems: It is recommended that you append 'nmi_watchdog=0' (without qutoes) for better accuracy to your syslinux configuration.  
You can get more details here: https://github.com/cyring/CoreFreq
</INLINE>
</FILE>

<FILE Run="/bin/bash">
<INLINE>

#Create settings file if not found
if [ ! -f "&plugin;/settings.cfg" ]; then
  echo 'autostart_corefreq=false
module_tested=false' > "&plugin;/settings.cfg"
fi

KERNEL_V="$(uname -r)"
PACKAGE="corefreq"
DL_URL="https://github.com/ich777/unraid-corefreq/releases/download/$KERNEL_V"

#Determine CPU manufacturer
VENDOR=$(lscpu | awk '/Vendor ID/{print $3}')
if [ "${VENDOR}" == "GenuineIntel" ]; then
  VENDOR="INTEL"
elif [ "${VENDOR}" == "AuthenticAMD" ]; then
   VENDOR="AMD"
else
 echo "---Unknown CPU vendor: ${VENDOR}, only Intel and AMD are supported!---"
 exit 1
fi

#Wait for Network and timeout after 30 seconds
HOST="8.8.8.8"
for i in {1..10}; do
  ping -c1 $HOST &amp;> /dev/null &amp;&amp; break;
done

#Get latest version from CoreFreq and create directory
LAT_V="$(wget -qO- https://api.github.com/repos/ich777/unraid-corefreq/releases/tags/${KERNEL_V} | jq -r '.assets[].name' | grep 'corefreq_'${VENDOR}'' | grep -E -v '\.md5$' | cut -d '-' -f2 | sort -V | tail -1)"

if [ ! -d "&plugin;/packages/${KERNEL_V%%-*}" ]; then
  mkdir -p "&plugin;/packages/${KERNEL_V%%-*}"
  CUR_V=""
else
  CUR_V="$(ls &plugin;/packages/${KERNEL_V%%-*} | cut -d '-' -f2)"
fi

#Check if version where fetched correctly
if [ -z "$LAT_V" ]; then
  if [ -z "CUR_V" ]; then
    echo
    echo "-----ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR------"
    echo "---Something went horribly wrong, please contact the developer of the plugin!---"
    echo
    exit 1
  else
    LAT_V="${CUR_V}"
    echo
    echo "---Can't get latest version from Corefreq, using installed version v$CUR_V!---"
    echo
  fi
fi

#Check for old packages
rm -rf $(ls -d &plugin;/packages/* | grep -v "${KERNEL_V%%-*}")
rm -rf $(ls -d &plugin;/packages/${KERNEL_V%%-*}/* | grep -v "${LAT_V}")

download() {
#Download CoreFreq
if wget -q -nc --show-progress --progress=bar:force:noscroll -O "&plugin;/packages/${KERNEL_V%%-*}/${PACKAGE}_${VENDOR}-${LAT_V}-x86_64-1.txz" "${DL_URL}/${PACKAGE}_${VENDOR}-${LAT_V}-x86_64-1.txz" ; then
  if [ "$(md5sum "&plugin;/packages/${KERNEL_V%%-*}/${PACKAGE}_${VENDOR}-${LAT_V}-x86_64-1.txz" | cut -d ' ' -f1)" != "$(wget -qO- "${DL_URL}/${PACKAGE}_${VENDOR}-${LAT_V}-x86_64-1.txz.md5" | cut -d ' ' -f1)" ]; then
    echo
    echo "-----ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR------"
    echo "--------------------------------CHECKSUM ERROR!---------------------------------"
    exit 1
  fi
  echo
  echo "--------------Successfully downloaded CoreFreq, please wait...!----------------"
else
  echo
  echo "-----ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR-----"
  echo "--------------------------Can't download CoreFreq------------------------------"
  exit 1
fi
}

check() {
if [ ! -f "&plugin;/packages/${KERNEL_V%%-*}/${PACKAGE}_${VENDOR}-${LAT_V}-x86_64-1.txz" ]; then
  echo
  echo "----------------Downloading CoreFreq v${LAT_V}, please wait...!---------------"
  echo "----------This could take some time, please don't close this window!----------"
  download
else
  echo
  echo "----------------------CoreFreq v${CUR_V} found locally!-----------------------"
fi
}

install() {
#Install CoreFreq and depmod
/sbin/installpkg "&plugin;/packages/${KERNEL_V%%-*}/${PACKAGE}_${VENDOR}-${LAT_V}-x86_64-1.txz"
/sbin/depmod -a
}

load_module() {
#Load CoreFreq module
/sbin/modprobe corefreqk
}

patch() {
#Patching files and creating necessary direcotries/symlinks
if [ ! -d /root/.config/CoreFreq ]; then
  mkdir -p /root/.config/CoreFreq
fi
ln -s &plugin;/corefreq.cfg /root/.config/CoreFreq/corefreq.cfg
}

start_daemon() {
#Start CoreFreq Daemon
echo "/usr/bin/corefreqd" | at now
}

#Check if CoreFreq is on the latest version and already downloaded
check

if [ ! -z "$(lsmod | grep "corefreqk")" ]; then
  if [ "${CUR_V}" != "${LAT_V}" ]; then
    echo
    echo "-------Please restart your server to install the new CoreFreq v${LAT_V}!------"
  else
    echo
    echo "---Nothing to do, CoreFreq is already installed and on the latest v${CUR_V}!---"
    echo
  fi
else
  echo
  echo "------------------Installing CoreFreq v${LAT_V}, please wait...!----------------"
  install >/dev/null
  echo
  echo "----------------Installation of CoreFreq v${LAT_V} successful!------------------"
  echo
  if [ "$(cat &plugin;/settings.cfg | grep "autostart_corefreq=" | cut -d '=' -f2)" == "true" ]; then
    load_module >/dev/null
  else
    echo
    echo "-----------Autostart from CoreFreq disabled! Please see Plugin page!------------"
    echo
  fi
fi

if [ "$(cat &plugin;/settings.cfg | grep "autostart_corefreq=" | cut -d '=' -f2)" == "true" ]; then
  if [ ! -z "$(pidof corefreqd)" ]; then
    echo
    echo "--------------Nothing to do, CoreFreq Daemon is already started!--------------"
    echo
  else
    echo
    patch >/dev/null
    echo "-------------------Starting CoreFreq Daemon, please wait...!------------------"
    start_daemon >/dev/null
    echo
  fi
fi

</INLINE>
</FILE>

<FILE Run="/bin/bash" Method="remove">
<INLINE>

echo "------------------------------------"
echo "-------Uninstalling CoreFreq--------"
echo "------------------------------------"
# Remove plugin related files
kill $(pidof corefreqd)
removepkg &name;-&version;
rm -rf &emhttp;
rm -rf &plugin;
echo
echo "------------------------------------------------------------------------"
echo "-----------CoreFreq uninstalled, please reboot your server!-------------"
echo "------------------------------------------------------------------------"
echo

</INLINE>
</FILE>
</PLUGIN>